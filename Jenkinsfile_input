def QUERY_RESULTS = [
    ["ENV": "DEV", "IMAGE": "jdk8-slim", "VERSION": "1.0"],
    ["ENV": "DEV", "IMAGE": "alpine", "VERSION": "1.2"],
    ["ENV": "DEV", "IMAGE": "buster", "VERSION": "1.6.2"]
]

def image_Choices = QUERY_RESULTS.collect { it.IMAGE }

pipeline {
    agent any

    parameters {
        choice(
            choices: image_Choices,
            description: 'Select an image and version:',
            name: 'SELECTED_IMAGE_VERSION'
        )
        
        activeChoice(
            description: 'Select a version:',
            name: 'SELECTED_VERSION',
            script: [
                $class: 'GroovyScript',
                script: '''
                    def selectedImage = bindings['SELECTED_IMAGE_VERSION'].split()[0]
                    def versionChoices = QUERY_RESULTS.findAll { it.IMAGE == selectedImage }.collect { it.VERSION }
                    return versionChoices
                '''
            ]
        )
    }

    stages {
        stage('Parameters') {
            steps {
                script {
                    def selectedImageVersion = params.SELECTED_IMAGE_VERSION
                    def selectedVersion = params.SELECTED_VERSION
                    
                    echo "Selected Image and Version: ${selectedImageVersion}"
                    echo "Selected Version: ${selectedVersion}"
                }
            }
        }
        
        // Add more stages as needed for your pipeline
    }
}
